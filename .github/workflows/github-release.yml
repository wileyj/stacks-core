## Github workflow to create a github release and upload binary artifacts

name: Github Release

on:
  workflow_call:
    inputs:
      node_tag:
        description: "Node Release Tag"
        required: true
        type: string
      node_docker_tag:
        description: "Node Docker Release Tag"
        required: true
        type: string
      signer_tag:
        description: "Signer Release Tag"
        required: true
        type: string
      signer_docker_tag:
        description: "Signer Docker Release Tag"
        required: true
        type: string
      is_node_release:
        description: "True if it is a node release"
        required: true
        type: string
      is_signer_release:
        description: "True if it is a signer release"
        required: true
        type: string

concurrency:
  group: github-release-${{ github.head_ref || github.ref }}
  ## Always cancel duplicate jobs
  cancel-in-progress: true

run-name: ${{ inputs.node_tag || inputs.signer_tag }}

jobs:
  ## This job's sole purpose is trigger a secondary approval outside of the matrix jobs below.
  ##   - If this job isn't approved to run, then the subsequent jobs will also not run - for this reason, we always exit 0
  ##   - `andon-cord` requires the repo environment "Build Release", which will trigger a secondary approval step before running this workflow.
  andon-cord:
    if: |
      inputs.node_tag != '' ||
      inputs.signer_tag != ''
    name: Andon Cord
    runs-on: ubuntu-latest
    ## Requires the repo environment "Push to Docker", which will trigger a secondary approval step before running this workflow.
    environment: "Push to Docker"
    permissions:
      id-token: write
      attestations: write
    steps:
      - name: Check Approval
        id: check
        run: |
          exit 0

      ## echo
      - name: echo
        id: echo
        shell: bash
        run: |
          echo "DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}"

      ## Login to dockerhub
      - name: Login to DockerHub
        id: docker_login
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

  # ## Build arch dependent binaries from source
  # ##
  # ## Runs when the following is true:
  # ##  - either node or signer tag is provided
  # build-binaries:
  #   if: |
  #     inputs.node_tag != '' ||
  #     inputs.signer_tag != ''
  #   name: Build Binaries
  #   runs-on: ubuntu-latest
  #   needs:
  #     - andon-cord
  #   permissions:
  #     id-token: write
  #     attestations: write
  #   strategy:
  #     ## Run a maximum of 10 builds concurrently, using the matrix defined in inputs.arch
  #     max-parallel: 10
  #     matrix:
  #       arch:
  #         - linux-musl
  #         - linux-glibc
  #         - macos
  #         - windows
  #       cpu:
  #         - arm64
  #         - x86-64 ## defaults to x86-64-v3 variant - intel haswell (2013) and newer
  #         # - x86-64-v2 ## intel nehalem (2008) and newer
  #         # - x86-64-v3 ## intel haswell (2013) and newer
  #         # - x86-64-v4 ## intel skylake (2017) and newer
  #       exclude:
  #         - arch: windows # excludes windows-arm64
  #           cpu: arm64
  #         - arch: windows # excludes windows-armv7
  #           cpu: armv7
  #         - arch: macos # excludes macos-armv7
  #           cpu: armv7
  #   steps:
  #     - name: Build Binary (${{ matrix.arch }}_${{ matrix.cpu }})
  #       uses: wileyj/actions/stacks-core/release/create-source-binary@chore/attestation
  #       with:
  #         arch: ${{ matrix.arch }}
  #         cpu: ${{ matrix.cpu }}
  #         node_tag: ${{ inputs.node_tag }}
  #         signer_tag: ${{ inputs.signer_tag }}
  #         signer_docker_tag: ${{ inputs.signer_docker_tag }}
  #         is_node_release: ${{ inputs.is_node_release }}

  # ## Runs when the following is true:
  # ##  - either node or signer tag is provided
  # create-release:
  #   if: |
  #     inputs.node_tag != '' ||
  #     inputs.signer_tag != ''
  #   name: Create Release
  #   runs-on: ubuntu-latest
  #   needs:
  #     - andon-cord
  #     - build-binaries
  #   permissions:
  #     contents: write
  #   steps:
  #     ## Creates releases
  #     - name: Create Release
  #       uses: stacks-network/actions/stacks-core/release/create-releases@main
  #       with:
  #         node_tag: ${{ inputs.node_tag }}
  #         node_docker_tag: ${{ inputs.node_docker_tag }}
  #         signer_tag: ${{ inputs.signer_tag }}
  #         signer_docker_tag: ${{ inputs.signer_docker_tag }}
  #         is_node_release: ${{ inputs.is_node_release }}
  #         is_signer_release: ${{ inputs.is_signer_release }}
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
