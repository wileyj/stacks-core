## Github workflow to create a github release and upload binary artifacts

name: Github Release

on:
  workflow_call:
    inputs:
      node_tag:
        description: "Node Release Tag"
        required: true
        type: string
      node_docker_tag:
        description: "Node Docker Release Tag"
        required: true
        type: string
      signer_tag:
        description: "Signer Release Tag"
        required: true
        type: string
      signer_docker_tag:
        description: "Signer Docker Release Tag"
        required: true
        type: string
      is_node_release:
        description: "True if it is a node release"
        required: true
        type: string
      is_signer_release:
        description: "True if it is a signer release"
        required: true
        type: string

## Define which docker arch to build for
env:
  DOWNSTREAM_PR_APP_ID: "1224905"

concurrency:
  group: github-release-${{ github.head_ref || github.ref }}
  ## Always cancel duplicate jobs
  cancel-in-progress: true

run-name: ${{ inputs.node_tag || inputs.signer_tag }}

jobs:
  ## Create the downstream PR for the release branch to master,develop
  create-pr:
    if: |
      (
        inputs.node_tag != '' ||
        inputs.signer_tag != ''
      )
    name: Create Downstream PR (${{ github.ref_name }})
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      checks: write
      contents: read
    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.DOWNSTREAM_PR_APP_ID }}
          private-key: ${{ secrets.DOWNSTREAM_PR_PRIVATE_KEY }}
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
      # - run: |
      #     git config --global user.name '${{ steps.generate-token.outputs.app-slug }}[bot]'
      #     git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com'
      - name: Open Downstream PR
        id: create-pr
        uses: wileyj/actions/stacks-core/release/downstream-pr@chore/run_pr_workflow
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          check_api: ${{ steps.generate-token.outputs.token }}
          user-name: "${{ steps.generate-token.outputs.app-slug }}[bot]"
          user-email: "${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com"
